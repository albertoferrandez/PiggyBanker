
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  expenses    Expense[] 
  incomes     Income[]
  accounts Account[]
}

model Expense {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  description String
  amount      Float
  createdAt   DateTime @default(now())
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String     @db.ObjectId
  userId      String     @db.ObjectId 

  @@index([authorId])
}



model Income {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  description String
  amount      Float
  createdAt   DateTime @default(now())
  author        User     @relation(fields: [authorId], references: [id])
  authorId      String @db.ObjectId
  userId      String     @db.ObjectId

  @@index([authorId])
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
